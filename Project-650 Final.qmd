---
title: "Final Project - 650"
author: "Vikas Rayala & Vikas Reddy B"
format: pdf
editor: visual
---

# Netflix Analysis

## Data Cleaning & Processing :

```{r}
library(dplyr)
library(tidyverse)
library(lubridate)
library(readr)
library(wordcloud)
library(tm)
#Load data
netflix_data <- read_csv("/Users/vikasreddybodireddy/Desktop/Stat 650/Stat 650/Project/netflix_titles.csv")

#About data 
dim(netflix_data)
names(netflix_data)
head(netflix_data)
str(netflix_data)
#Summary Stats
summary(netflix_data)
```

```{r}
#Mutating date to date format 
netflix_data <- netflix_data %>% 
  mutate(date_added = mdy(date_added))
```

```{r}
#Grouping by type of shows
netflix_data %>%
 group_by(type) %>%
 summarize(count = n())
```

### cleaning data:

```{r}
#Printing Null Values for each variable 
colSums(is.na(netflix_data))
```

```{r}
#Omiting Null Values & saving data in different name 
netflix <- netflix_data %>% 
                filter(
                        show_id != "n/a",
                        type != "n/a",
                        title != "n/a",
                        director != "n/a",
                        cast != "n/a",
                        country != "n/a")
head(netflix)

```

```{r}
#Grouping By Rating 
netflix_data %>% 
  group_by(rating) %>% 
  summarise(num_ratings = n())
#Checking distinct values for title & Show_id
n_distinct(netflix_data$show_id)
n_distinct(netflix_data$title)

```

```{r}
#Anlysing 
#Movies by country 
movies_world <- netflix_data %>% 
  group_by(type) %>% 
  group_by(country) %>% 
  summarise(num_movies_country = n()) %>%
  arrange(desc(num_movies_country)) %>% 
  slice(1:20)

head(movies_world)


#Produced content by year
netflix_data %>% 
  group_by(release_year) %>% 
  summarise(year_produce = n()) %>% 
  arrange(desc(year_produce)) %>% 
  slice(1:10)
```

## EDA:

### 1. Are Movies on Netflix more than TV shows?

```{r}
# With Null values data. 
netflix_data %>% count(type, sort = T) %>%
  
  mutate(prop = paste0(round(n / sum(n) * 100, 0), "%")) %>%
  ggplot(aes(x = "", y = prop, fill = type)) +
  geom_bar(
    stat = "identity",
    width = 1,
    color = "steelblue",
    size = 1
  ) +
  coord_polar("y", start = 0) +
  geom_text(
    aes(y = prop, label = prop),
    position = position_stack(vjust = 0.5),
    size = 6,
    col = "white",
    fontface = "bold"
  ) +
  scale_fill_manual (values = c('#e41a1c', '#377eb8')) +
  theme_void() +
  labs(
    title = "Are Movies on Netflix more than TV shows?",
    subtitle = "Pie Plot, proportion of Movies to TV shows",
    fill = ""
  )

ggplot(data=netflix_data, aes(x=type))+geom_bar(fill = "dark blue")+ 
labs(
    title = "Are Movies on Netflix more than TV shows?",
    subtitle = "Pie Plot, proportion of Movies to TV shows",
    fill = ""
  ) +
xlab("Type")+
ylab("Count")
# Without Null Values data

netflix %>% count(type, sort = T) %>%
  
  mutate(prop = paste0(round(n / sum(n) * 100, 0), "%")) %>%
  ggplot(aes(x = "", y = prop, fill = type)) +
  geom_bar(
    stat = "identity",
    width = 1,
    color = "steelblue",
    size = 1
  ) +
  coord_polar("y", start = 0) +
  geom_text(
    aes(y = prop, label = prop),
    position = position_stack(vjust = 0.5),
    size = 6,
    col = "white",
    fontface = "bold"
  ) +
  scale_fill_manual (values = c('#e41a1c', '#377eb8')) +
  theme_void() +
  labs(
    title = "Are Movies on Netflix more than TV shows?",
    subtitle = "Pie Plot, proportion of Movies to TV shows",
    fill = ""
  )

# Histogram 
ggplot(data=netflix, aes(x=type))+geom_bar(fill = "dark blue")+ 
labs(
    title = "Are Movies on Netflix more than TV shows?",
    subtitle = "Pie Plot, proportion of Movies to TV shows",
    fill = ""
  ) +
xlab("Type")+
ylab("Count")
```

### What is the trend of content over the years?

```{r}
netflix_data %>%
 filter(release_year != 2022) %>%
 group_by(type, release_year) %>%
 count() %>%
 ggplot() + geom_line(aes(x = release_year, y = n, group = type, color = type)) +
  labs(title = 'Trend of netflix content every year',
       subtitle = 'by Content Type') +
theme_minimal()

```

### What are the top countries for content in netflix?

```{r}
# Filter to top 15 countries by count
top_countries <- netflix %>% 
  count(country) %>%
  top_n(15, wt = n) %>%
  arrange(desc(n))

# Bar plot 
ggplot(top_countries, aes(x = reorder(country, n), y = n)) + 
  geom_col() +
  labs(
    title = "Netflix Content by Top 15 Countries",
    x = "Country",
    y = "Number of Titles"
  ) +
  coord_flip()
```

```{r}
# Top 15 countries for TV shows
netflix %>%
  filter(type == "TV Show") %>%
  count(country, sort = TRUE) %>%
  head(15) %>%
  ggplot(aes(x = reorder(country, n), y = n)) +
  geom_col() +
  coord_flip() +
  labs(title = "Top 15 Countries for TV Shows",
       x = "Number of TV Shows",
       y = "Country")

```

```{r}
df_country <- netflix_data %>% 
    mutate(country = strsplit(as.character(country), ",")) %>% 
    unnest(country) %>%
      mutate(country = trimws(country, which = c("left")))#eliminate space on the left side
 
 df_country <- df_country %>%
  group_by(country)%>%
    add_tally()
  
 df_country <- df_country%>%
   select(country,n,type) %>%
   unique()
 df_country_top5 <- df_country[order(-df_country$n),]
 

 
 df_country_top5 <- df_country_top5[1:35,]
 
 ggplot(df_country_top5, aes(x = reorder(country, n), y = n, fill = type))+
   geom_bar(stat = "identity")+
   coord_flip()+
   theme_classic()+
  theme(axis.title.x = element_blank(),
          axis.title.y = element_blank())+
  labs(title="Content available per country", x = "Amount of content")
```

### **who are the TOP DIRECTORS for netflix movies and TV shows?**

```{r}
directors <- netflix_data %>%
group_by(director)%>%
filter(director!="")%>%
summarize(number = n())%>%
arrange(desc(number))%>%
slice(1:20)
head(directors)

ggplot(data=directors, aes(x=reorder(director, - number), y=number)) + 
       geom_col(fill='dark blue') + 
labs(title = "Top Directors") +
xlab("Directors")+
ylab("Number of movies")+
coord_flip()
```

### Which year had more Movies and TV Shows released?

```{r}
netflix_years <- netflix_data%>%
filter(release_year>=2010)%>%
group_by(type)%>%
arrange()

head(netflix_years)

ggplot(data=netflix_years, aes(x=release_year,fill=type))+geom_bar(position=position_dodge()) +
labs(title = "Which year had more Movies and TV Shows released.") +
xlab("Release Year")+
ylab("Count")
```

### What are the ratings for different type of content?

```{r, message=FALSE,warning=FALSE}
library(ggplot2)
library(dplyr)

# Filter and transform data
filtered_data <- netflix_data %>%
  select(rating, type) %>%
  filter(!is.na(rating)) %>%
  mutate(rating = fct_lump(rating, 5)) %>%
  group_by(rating, type) %>%
  summarise(Count = n()) %>%
  arrange(Count)

# Create bar plot using ggplot2
ggplot(filtered_data, aes(x = type, y = Count, fill = rating, label = Count)) +
  geom_bar(stat = "identity") +
  geom_text(position = position_stack(vjust = 0.5), size = 4) +
  theme_minimal() +
  labs(title = "Rating by Type",
       y = "Count",
       x = "Type") +
  theme(legend.title = element_text(face = "bold")) +
  guides(fill = guide_legend(title = "Rating"))

```

### what are top & bottom genres of content on Netflix

```{r}

netflix_data %>%
 select(listed_in) %>%
 mutate(listed_in = str_split(listed_in,',')) %>%
 unnest(listed_in) %>%
 group_by(listed_in) %>%
 count() %>%
 arrange(desc(n)) %>%
 head(30) %>%
 ggplot() + geom_col(aes(y = reorder(listed_in,n), x = n)) +
 labs(title = 'Themes / Genre of Titles',
     x = '# of Titles',
     y = 'Theme / Genre') +
theme_minimal()

netflix_data %>%
 tail(20) %>%
 select('listed_in') %>%
 mutate(listed_in = str_split(listed_in, ',')) %>%
 unnest(listed_in) %>%
 group_by(listed_in) %>%
 count()

```

### Show how the time series plot for duration of movies

```{r}
netflix_data$duration<-gsub("min","",as.character(netflix_data$duration))
netflix_data%>%
filter(type == "Movie")%>%
filter(duration != "")%>%
group_by(release_year)%>%
summarize(avg_duration = mean(as.numeric(as.character(duration), na.rm = TRUE)))%>%
ggplot(aes(x=release_year, y = avg_duration)) +geom_line(col = 'dark blue') +
labs(title = 'Duration of Movies Over the Years') +
xlab('Year')+
ylab('Duration')
```

### **what are Most frequent words in description variable For Movies?**

```{r, message=FALSE,warning=FALSE}
library(tidytext)
desc_words_m <- netflix_data %>% select(type, show_id, description) %>%
  filter(type == "Movie") %>% 
    unnest_tokens(word, description) %>%
    anti_join(stop_words)

count_word <- desc_words_m %>%
   count(word, sort = TRUE)


wordcloud(words = count_word$word,  
          freq = count_word$n, 
          min.freq = 80,  
          max.words = nrow(count_word), 
          random.order = FALSE,  
          rot.per = 0.1,  
          colors = brewer.pal(8, "Dark2")) 
```

### **what are Most frequent words in description variable For shows?**

```{r, messages=FALSE, warning=FALSE}
desc_words_tv <- netflix_data %>% select(type, show_id, description) %>%
  filter(type == "TV Show") %>% 
    unnest_tokens(word, description) %>%
    anti_join(stop_words)

count_word <- desc_words_tv %>%
   count(word, sort = TRUE)


wordcloud(words = count_word$word,  
          freq = count_word$n, 
          min.freq = 30,  
          max.words = nrow(count_word), 
          random.order = FALSE,  
          rot.per = 0.1,  
          colors = brewer.pal(8, "Dark2")) 
```

```{r, messages = FALSE, warning = False }
netflix_data %>% #removed 2021 because the year has not yet ended
  filter(release_year != 2021)  %>% #transform the release year into characters
  transform(release_year = as.character(release_year)) %>%
  group_by(release_year) %>% 
  summarize(no_of_movies = n()) %>% 
  arrange(desc(release_year)) %>% 
  head(10) %>% #plot a bar plot of each year against the no of movies released each year
  ggplot(aes(x = reorder(release_year, no_of_movies), y = no_of_movies, fill= release_year)) + 
  geom_bar(stat = "identity", width = 0.8) + 
  xlab("Release Year") +
  ylab("Number of Movies") +
  ggtitle("Top 10 Years with highest release") +
  coord_flip()
```
